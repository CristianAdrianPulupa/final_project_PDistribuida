version: '3.9'

services:
  # üóÉÔ∏è Bases de Datos
  mongo:
    image: mongo
    container_name: notary-mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db

  mysql:
    image: mysql:8
    container_name: notary-mysql
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: notarydb
    volumes:
      - mysql-data:/var/lib/mysql

  postgres:
    image: postgres:14
    container_name: notary-postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
      POSTGRES_DB: notarydb
    volumes:
      - postgres-data:/var/lib/postgresql/data

  redis:
    image: redis
    container_name: notary-redis
    ports:
      - "6379:6379"

  neo4j:
    image: neo4j:latest
    container_name: neo4j
    ports:
      - "7687:7687"
      - "7474:7474"
    environment:
      - NEO4J_AUTH=neo4j/NotaryEdu2025
    volumes:
      - neo4j-data:/data

  # üîê Microservicios ‚Äì user-domain
  users-service:
    build: ./backend/user-domain/users-service
    container_name: users-service
    ports:
      - "3001:3001"
    env_file:
      - ./backend/user-domain/users-service/.env
    depends_on:
      - mongo

  profile-service:
    build: ./backend/user-domain/profile-service
    container_name: profile-service
    ports:
      - "3006:3006"
    env_file:
      - ./backend/user-domain/profile-service/.env
    depends_on:
      - postgres

  notification-service:
    build: ./backend/user-domain/notification-service
    container_name: notification-service
    ports:
      - "3003:3003"
    depends_on:
      - mongo
    env_file:
      - ./backend/user-domain/notification-service/.env

  user-settings:
    build: ./backend/user-domain/user-settings-service
    container_name: user-settings
    ports:
      - "3007:3007"
    environment:
      - PORT=3007

  user-status-service:
    build: ./backend/user-domain/user-status-service
    container_name: user-status-service
    ports:
      - "3008:3008"
    env_file:
      - ./backend/user-domain/user-status-service/.env
    depends_on:
      - mongo

  user-notes-service:
    build: ./backend/user-domain/user-notes-service
    container_name: user-notes-service
    ports:
      - "3009:3009"
    env_file:
      - ./backend/user-domain/user-notes-service/.env
    depends_on:
      - mongo

  # üéº Microservicios ‚Äì content-domain
  scales-service:
    build: ./backend/content-domain/scales-service
    container_name: scales-service
    ports:
      - "5001:5001"
    depends_on:
      - postgres
    env_file:
      - ./backend/content-domain/scales-service/.env

  chords-service:
    build: ./backend/content-domain/chords-service
    container_name: chords-service
    ports:
      - "5002:5002"
    depends_on:
      - postgres
    env_file:
      - ./backend/content-domain/chords-service/.env

  theory-service:
    build: ./backend/content-domain/theory-service
    container_name: theory-service
    ports:
      - "5003:5003"
    depends_on:
      - postgres
    env_file:
      - ./backend/content-domain/theory-service/.env

  instrument-guide-service:
    build: ./backend/content-domain/instrument-guide-service
    container_name: instrument-guide-service
    ports:
      - "5004:5004"
    depends_on:
      - postgres
    env_file:
      - ./backend/content-domain/instrument-guide-service/.env

  music-quiz-service:
    build: ./backend/content-domain/music-quiz-service
    container_name: music-quiz-service
    ports:
      - "5005:5005"
    depends_on:
      - postgres
    env_file:
      - ./backend/content-domain/music-quiz-service/.env

  daily-lesson-service:
    build: ./backend/content-domain/daily-lesson-service
    container_name: daily-lesson-service
    ports:
      - "5007:5007"
    depends_on:
      - postgres
    env_file:
      - ./backend/content-domain/daily-lesson-service/.env

  # üí¨ Microservicios ‚Äì community-feedback-domain
  feedback-service:
    build: ./backend/community-feedback-domain/feedback-service
    container_name: feedback-service
    ports:
      - "3010:3010"
    depends_on:
      - mongo
    env_file:
      - ./backend/community-feedback-domain/feedback-service/.env

  faq-service:
    build: ./backend/community-feedback-domain/faq-service
    container_name: faq-service
    ports:
      - "3011:3011"

  support-chat-service:
    build: ./backend/community-feedback-domain/support-chat-service
    container_name: support-chat-service
    ports:
      - "3012:3012"
    depends_on:
      - redis

  user-report-service:
    build: ./backend/community-feedback-domain/user-report-service
    container_name: user-report-service
    ports:
      - "3013:80"

  relationship-graph-simple:
    build: ./backend/community-feedback-domain/relationship-graph-simple
    container_name: relationship-graph-simple
    ports:
      - "3016:3016"
    depends_on:
      - neo4j

  music-meter-guide-service:
    build: ./backend/learning-tools-domain/music-meter-guide-service
    container_name: music-meter-guide-service
    ports:
      - "3020:3020"
    depends_on:
      - mongo
    env_file:
      - ./backend/learning-tools-domain/music-meter-guide-service/.env

  music-glossary-service:
    build: ./backend/learning-tools-domain/music-glossary-service
    container_name: music-glossary-service
    ports:
      - "3030:3030"
    volumes:
      - glossary-data:/app/app/database

  note-learning-service:
    build: ./backend/learning-tools-domain/note-learning-service
    container_name: note-learning-service
    ports:
      - "3040:3040"
    volumes:
      - note-data:/app

  # üíª Frontend
  frontend:
    build: ./frontend-auth
    container_name: frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend-auth:/app
      - /app/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true

volumes:
  mongo-data:
  mysql-data:
  note-data:
  postgres-data:
  neo4j-data:
  glossary-data:
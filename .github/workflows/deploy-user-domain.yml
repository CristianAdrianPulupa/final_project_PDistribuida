name: deploy

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to DockerHub and Push All Images
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

          docker build -t ${{ secrets.DOCKER_USERNAME }}/users-service ./backend/user-domain/users-service
          docker push ${{ secrets.DOCKER_USERNAME }}/users-service

          docker build -t ${{ secrets.DOCKER_USERNAME }}/profile-service ./backend/user-domain/profile-service
          docker push ${{ secrets.DOCKER_USERNAME }}/profile-service

          docker build -t ${{ secrets.DOCKER_USERNAME }}/notification-service ./backend/user-domain/notification-service
          docker push ${{ secrets.DOCKER_USERNAME }}/notification-service

          docker build -t ${{ secrets.DOCKER_USERNAME }}/user-settings-service ./backend/user-domain/user-settings-service
          docker push ${{ secrets.DOCKER_USERNAME }}/user-settings-service

          docker build -t ${{ secrets.DOCKER_USERNAME }}/user-status-service ./backend/user-domain/user-status-service
          docker push ${{ secrets.DOCKER_USERNAME }}/user-status-service

          docker build -t ${{ secrets.DOCKER_USERNAME }}/user-notes-service ./backend/user-domain/user-notes-service
          docker push ${{ secrets.DOCKER_USERNAME }}/user-notes-service

      - name: Deploy all user-domain microservices to EC2
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          port: 22
          script: |
            docker pull ${{ secrets.DOCKER_USERNAME }}/users-service
            docker pull ${{ secrets.DOCKER_USERNAME }}/profile-service
            docker pull ${{ secrets.DOCKER_USERNAME }}/notification-service
            docker pull ${{ secrets.DOCKER_USERNAME }}/user-settings-service
            docker pull ${{ secrets.DOCKER_USERNAME }}/user-status-service
            docker pull ${{ secrets.DOCKER_USERNAME }}/user-notes-service

            docker stop users-service || true && docker rm users-service || true
            docker run -d --name users-service -p 3001:3001 \
              -e MONGO_URI=mongodb://52.21.76.42:27017/notary_users \
              ${{ secrets.DOCKER_USERNAME }}/users-service

            docker stop profile-service || true && docker rm profile-service || true
            docker run -d --name profile-service -p 3006:3006 \
              -e MONGO_URI=mongodb://52.21.76.42:27017/notary_profiles \
              ${{ secrets.DOCKER_USERNAME }}/profile-service

            docker stop notification-service || true && docker rm notification-service || true
            docker run -d --name notification-service -p 3003:3003 \
              -e MONGO_URI=mongodb://52.21.76.42:27017/notificationsdb \
              ${{ secrets.DOCKER_USERNAME }}/notification-service

            docker stop user-settings-service || true && docker rm user-settings-service || true
            docker run -d --name user-settings-service -p 3007:3007 \
              -e MONGO_URI=mongodb://52.21.76.42:27017/usersettingsdb \
              ${{ secrets.DOCKER_USERNAME }}/user-settings-service

            docker stop user-status-service || true && docker rm user-status-service || true
            docker run -d --name user-status-service -p 3008:3008 \
              -e MONGO_URI=mongodb://52.21.76.42:27017/user-status-db \
              ${{ secrets.DOCKER_USERNAME }}/user-status-service

            docker stop user-notes-service || true && docker rm user-notes-service || true
            docker run -d --name user-notes-service -p 3009:3009 \
              -e MONGO_URI=mongodb://52.21.76.42:27017/usernotesdb \
              ${{ secrets.DOCKER_USERNAME }}/user-notes-service
